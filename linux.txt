source ~/.bashrc                reload .bashrc
readlink -e java                what does java link to? -e: follow all links
add persistent path             add it in etc/environment file
awk '{ print $3}' filename      print third col of a file
awk 'FNR == 2 {print}'          print second row
alias test='ls -lha'            creates custom command
apt-cache search aPack          search for package 'aPack' in the repos
chmod ug+rwx file.txt           give user and group write permission
crontab -u john -l              view crontab entry for a specific user
diff -qsw one.c two.c           compare files, ignore whitespace chars
echo $PATH                      print environment variable PATH
echo $SHELL                     shows which shell you are using.
env                             prints all current environment variables
etc/environment                 contains a list of persistent paths
file                            determine file type. can detect symbolic links
find ./ -name "test"            find files named 'test' in dir ./ 
find ./ -regex '.*lol.*'        in dir ./ finds all files with string 'lol' in the file path
find ./ -type -d -name "lol"    find directory named 'lol'
free -m                         view available memory in megs or -g for gigs
grep -ri "test" fileordir       search dir rec. for string test, show file names in the results
grep -e "foo" -e "bar"          greps for 'foo' or 'bar'
grep -w test                    returns only if the word test is found
ifconfig -a                     view all network interfaces with statuses
iftop -i wlan0                  monitor bandwidth in real time
ll='ls -l'                      creates an alias for the command ls -l. can be put in .bashrc
ln -s ~/1.txt ./logs.txt        create symbolic link file logs.txt that point it to real file 1.txt
locate somefile.txt             quickly find file somefile.txt
lshw                            list hardware
mkdir /z; mount /dev/sdb1 /z    mount a file system to folder /z
nethongs wlan0                  monitor bandwidth in real time per process
ps -ef                          show processes. -e: all, -f: full format
ps -e u                         show all processes in user format 
rename -n 's/\sfoo//' *.csv     replace " foo" with "" from names of csv files. -n flag for no action
rm `ls -t | head -1`            remove last modifed file
sed -i 's/.\{4\}/& /' *.c       in all .c files currdir, after first four characters, insert space; save
sed -i 's/u/z/g' path/*.c       replace u with z in all .c files in path/ and save (-i)
su dima                         change user to dima
sudo apt-get purge <pckg>       removes everything, including conffiles 
sudo apt-get remove <pckg>      removes package, leaves conffiles
tar -cf ar.tar foo bar          create an archive with files foo and bar
tar -tvf archive.tar            list all files in an archive verbosely
tar -xf archive.tar             extract all files
uname -r                        print kernel release info
wget www.me.com/f.zip           download file
which                           returns the pathnames of the files
xxd -b text.txt                 show contents of text.txt in binary format
~/.bashrc                       executes when non-login shell opens. On ubuntu, in etc/bash.bashrc

############# LINUX DIRECTORY ARCHITECTURE #######################################
http://www.pathname.com/fhs/pub/fhs-2.3.html
/bin            common binaries for all: ls, ps, ping, grep
/sbin           binaries for sysadmin, maintenance: iptables, rebood, fdisk
/etc            config files for programs, start up and shut down scripts
/dev            device files, like terminal device, usb, or any device attached to system
/proc           virtual file system that contains info about processes. e.g. /proc/uptime, /proc/{pid}
/var            files that are expected to grow, system logs, packages, databases, emails, print queues
/tmp            temp files created by system and user. deleted on reboot
/usr            shareable read only data. contains only sub dirs
/usr/lib        files not to be executed directly by users or shell scripts
/usr/local      for use by sysadmin when installing software locally
/home           home directories of users
/boot           boot loader related files. 
/lib            files that support binaries in /bin and /sbin. Files end in .ld or .so
/opt            add-on applications from individual vendors
/mnt            temp dir where sysadmins can mount filesystems
/media          temp dir for removable devices
/srv            contains server specific services related data
######################################################################################
